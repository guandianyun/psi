package com.bytechainx.psi.common.model;

import com.jfinal.plugin.activerecord.ActiveRecordPlugin;

/**
 * Generated by JFinal, do not modify this file.
 * <pre>
 * Example:
 * public void configPlugin(Plugins me) {
 *     ActiveRecordPlugin arp = new ActiveRecordPlugin(...);
 *     _MappingKit.mapping(arp);
 *     me.add(arp);
 * }
 * </pre>
 */
public class _MappingKit {
	
	public static void mapping(ActiveRecordPlugin arp) {
		arp.addMapping("customer_category", "id", CustomerCategory.class);
		arp.addMapping("customer_info", "id", CustomerInfo.class);
		arp.addMapping("customer_price_level", "id", CustomerPriceLevel.class);
		arp.addMapping("goods_attribute", "id", GoodsAttribute.class);
		arp.addMapping("goods_attribute_ref", "id", GoodsAttributeRef.class);
		arp.addMapping("goods_category", "id", GoodsCategory.class);
		arp.addMapping("goods_image_ref", "id", GoodsImageRef.class);
		arp.addMapping("goods_info", "id", GoodsInfo.class);
		arp.addMapping("goods_price", "id", GoodsPrice.class);
		arp.addMapping("goods_print_tag", "id", GoodsPrintTag.class);
		arp.addMapping("goods_spec", "id", GoodsSpec.class);
		arp.addMapping("goods_spec_options", "id", GoodsSpecOptions.class);
		arp.addMapping("goods_spec_ref", "id", GoodsSpecRef.class);
		arp.addMapping("goods_stock_config", "id", GoodsStockConfig.class);
		arp.addMapping("goods_unit", "id", GoodsUnit.class);
		arp.addMapping("inventory_checking", "id", InventoryChecking.class);
		arp.addMapping("inventory_checking_goods", "id", InventoryCheckingGoods.class);
		arp.addMapping("inventory_stock", "id", InventoryStock.class);
		arp.addMapping("inventory_stock_log", "id", InventoryStockLog.class);
		arp.addMapping("msg_notice", "id", MsgNotice.class);
		arp.addMapping("msg_notice_send", "id", MsgNoticeSend.class);
		arp.addMapping("purchase_order", "id", PurchaseOrder.class);
		arp.addMapping("purchase_order_cost", "id", PurchaseOrderCost.class);
		arp.addMapping("purchase_order_fee", "id", PurchaseOrderFee.class);
		arp.addMapping("purchase_order_fund", "id", PurchaseOrderFund.class);
		arp.addMapping("purchase_order_goods", "id", PurchaseOrderGoods.class);
		arp.addMapping("purchase_order_log", "id", PurchaseOrderLog.class);
		arp.addMapping("purchase_reject_order", "id", PurchaseRejectOrder.class);
		arp.addMapping("purchase_reject_order_cost", "id", PurchaseRejectOrderCost.class);
		arp.addMapping("purchase_reject_order_fee", "id", PurchaseRejectOrderFee.class);
		arp.addMapping("purchase_reject_order_fund", "id", PurchaseRejectOrderFund.class);
		arp.addMapping("purchase_reject_order_goods", "id", PurchaseRejectOrderGoods.class);
		arp.addMapping("purchase_reject_order_log", "id", PurchaseRejectOrderLog.class);
		arp.addMapping("sale_order", "id", SaleOrder.class);
		arp.addMapping("sale_order_cost", "id", SaleOrderCost.class);
		arp.addMapping("sale_order_fee", "id", SaleOrderFee.class);
		arp.addMapping("sale_order_fund", "id", SaleOrderFund.class);
		arp.addMapping("sale_order_goods", "id", SaleOrderGoods.class);
		arp.addMapping("sale_order_log", "id", SaleOrderLog.class);
		arp.addMapping("sale_reject_order", "id", SaleRejectOrder.class);
		arp.addMapping("sale_reject_order_cost", "id", SaleRejectOrderCost.class);
		arp.addMapping("sale_reject_order_fee", "id", SaleRejectOrderFee.class);
		arp.addMapping("sale_reject_order_fund", "id", SaleRejectOrderFund.class);
		arp.addMapping("sale_reject_order_goods", "id", SaleRejectOrderGoods.class);
		arp.addMapping("sale_reject_order_log", "id", SaleRejectOrderLog.class);
		arp.addMapping("supplier_category", "id", SupplierCategory.class);
		arp.addMapping("supplier_info", "id", SupplierInfo.class);
		arp.addMapping("system_oper", "id", SystemOper.class);
		arp.addMapping("tenant_admin", "id", TenantAdmin.class);
		arp.addMapping("tenant_config", "id", TenantConfig.class);
		arp.addMapping("tenant_export_log", "id", TenantExportLog.class);
		arp.addMapping("tenant_oper_log", "id", TenantOperLog.class);
		arp.addMapping("tenant_org", "id", TenantOrg.class);
		arp.addMapping("tenant_pay_order", "id", TenantPayOrder.class);
		arp.addMapping("tenant_pay_order_log", "id", TenantPayOrderLog.class);
		arp.addMapping("tenant_print_template", "id", TenantPrintTemplate.class);
		arp.addMapping("tenant_role", "id", TenantRole.class);
		arp.addMapping("tenant_role_oper_ref", "id", TenantRoleOperRef.class);
		arp.addMapping("tenant_sms_log", "id", TenantSmsLog.class);
		arp.addMapping("trader_balance_account", "id", TraderBalanceAccount.class);
		arp.addMapping("trader_book_account", "id", TraderBookAccount.class);
		arp.addMapping("trader_book_account_logs", "id", TraderBookAccountLogs.class);
		arp.addMapping("trader_customer_receivable", "id", TraderCustomerReceivable.class);
		arp.addMapping("trader_fund_order", "id", TraderFundOrder.class);
		arp.addMapping("trader_fund_type", "id", TraderFundType.class);
		arp.addMapping("trader_income_expenses", "id", TraderIncomeExpenses.class);
		arp.addMapping("trader_income_expenses_fund", "id", TraderIncomeExpensesFund.class);
		arp.addMapping("trader_pay_order", "id", TraderPayOrder.class);
		arp.addMapping("trader_pay_order_fund", "id", TraderPayOrderFund.class);
		arp.addMapping("trader_pay_order_ref", "id", TraderPayOrderRef.class);
		arp.addMapping("trader_receipt_order", "id", TraderReceiptOrder.class);
		arp.addMapping("trader_receipt_order_fund", "id", TraderReceiptOrderFund.class);
		arp.addMapping("trader_receipt_order_ref", "id", TraderReceiptOrderRef.class);
		arp.addMapping("trader_supplier_payable", "id", TraderSupplierPayable.class);
		arp.addMapping("trader_transfer_order", "id", TraderTransferOrder.class);
	}
}


